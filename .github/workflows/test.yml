name: Tests

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgsl-dev libfftw3-dev
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov nose coverage
        pip install -r requirements.txt
    
    - name: Install package
      run: |
        pip install -e .
    
    - name: Test import
      run: |
        python -c "import lenstools; print('LensTools version:', lenstools.__version__)"
    
    - name: Run tests with nose
      run: |
        nosetests --with-coverage --cover-package=lenstools --logging-level=INFO
      continue-on-error: true  # Some tests may fail without data files
    
    - name: Run basic functionality tests
      run: |
        python -c "
        import lenstools
        from lenstools.image.convergence import ConvergenceMap
        from lenstools.catalog import Catalog
        print('Basic imports successful')
        "

  test-with-c-extensions:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgsl-dev libfftw3-dev
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov nose coverage
        pip install -r requirements.txt
    
    - name: Enable C extensions
      run: |
        sed -i 's/build_c_extensions = False/build_c_extensions = True/' setup.py
    
    - name: Install package with C extensions
      run: |
        pip install -e .
      continue-on-error: true  # C extensions may fail to build
    
    - name: Test C extensions if available
      run: |
        python -c "
        try:
            from lenstools.extern import _topology
            print('C extensions loaded successfully')
        except ImportError:
            print('C extensions not available, using Python fallbacks')
        "
      continue-on-error: true